// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int          @id @default(autoincrement())
  name       String
  username   String       @unique
  email      String       @unique
  otp        String?
  active     Boolean
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  owner      Owners[]
  validaters Validaters[]
}

model Owners {
  id        Int         @id @default(autoincrement())
  position  String
  active    Boolean
  UserId    Int         @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  workflows Workflows[]
  Orders    Orders[]
  Users     Users       @relation(fields: [UserId], references: [id])
}

model Validaters {
  id        Int         @id @default(autoincrement())
  position  String
  active    Boolean
  UserId    Int         @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  workflows Workflows[]
  Users     Users       @relation(fields: [UserId], references: [id])
}

model Workflows {
  id             Int         @id @default(autoincrement())
  ValidateUserId Int
  OwnerUserId    Int
  message        String
  active         Boolean
  createdAt      DateTime    @default(now())
  Validaters     Validaters? @relation(fields: [ValidateUserId], references: [id])
  Owner          Owners?     @relation(fields: [OwnerUserId], references: [id])
  Orders         Orders[]
}

model Tags {
  id        Int        @id @default(autoincrement())
  name      String
  active    Boolean
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Products  Products[]
}

model Products {
  id          Int         @id @default(autoincrement())
  name        String
  description String      @db.Text
  imgUrl      String?
  qty         Int
  price       Int
  statusOrder StatusOrder?
  TagId       Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  Orders      Orders[]
  Tags        Tags?       @relation(fields: [TagId], references: [id])
}

enum StatusOrder {
  ORDERING
  SATTLE
}

model Orders {
  id          Int        @id @default(autoincrement())
  ProductId   Int
  OwnerId     Int
  qty         Int
  totalAmount Int
  WorkflowId  Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Products    Products?  @relation(fields: [ProductId], references: [id])
  Owners      Owners?    @relation(fields: [OwnerId], references: [id])
  Workflows   Workflows? @relation(fields: [WorkflowId], references: [id])
}
